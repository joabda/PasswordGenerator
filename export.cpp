#include "export.h"

Export::Export()
{
    availableMethods_.push_back("TXT");
    availableMethods_.push_back("PDF");
}

void Export::PDF(const QVector<QPair<QString, QString>>& password) const
{
    QString html =
    "<div align=left>"
       "Generator<br>"
       "<a href=\"https://github.com/joabda/PasswordGenerator\">For More Informations </a>"
       "Montreal, Quebec<br>"
    "</div>"
    "<div align=right>"
       "Passwords generated on <br>"
        + QDate::currentDate().toString() +
    "</div>"
    "<h1 align=center>Generated Passwords</h1>"
    "<p align=justify>";
    for(auto& element : password)
        html += "Password for " + element.first + " is : " + element.second + ".<br>";

    html += "</p>"
            "<div align=right>sincerly</div>";

    QTextDocument document;
    document.setHtml(html);

    QPrinter printer(QPrinter::PrinterResolution);
    printer.setOutputFormat(QPrinter::PdfFormat);
    printer.setPaperSize(QPrinter::A4);
    printer.setOutputFileName("Passwords");
    printer.setPageMargins(QMarginsF(15, 15, 15, 15));

    document.print(&printer);
}

void Export::TXT(const QVector<QPair<QString, QString>>& password) const
{
    ofstream exportFile("Passwords.txt");
    if(exportFile.is_open())
    {
        exportFile << "Passwords generated by Generator a C++ random password generator.\n";
        exportFile << "Find more on github.com/joabda/Generator\n";
        for(auto& oneElement : password)
            exportFile << "Password for " << oneElement.first.toStdString() << " is : " << oneElement.second.toStdString() << ".\n";
        exportFile << "Generated on " << QDate::currentDate().toString().toStdString() << endl;
    }
    else
        fprintf(stderr, "Error opening file\n");
}

void Export::saveAs(const QString& method, const QVector<QPair<QString, QString>>& passwords) const
{
    if(method == "PDF")
        PDF(passwords);
    else
    {
        if(method == "TXT")
            TXT(passwords);
    }
}

QVector<QString> Export::getMethods() const
{
    return availableMethods_;
}
